@echo off
setlocal enabledelayedexpansion

rem Get basic info
for /f "tokens=*" %%a in ('git config user.email') do set USER_EMAIL=%%a
for /f "tokens=*" %%a in ('git config user.name') do set USER_NAME=%%a
for /f "tokens=*" %%a in ('git config --get remote.origin.url') do set REPO_URL=%%a

rem Clean up the repo URL to get the base GitHub URL for commits
set REPO_URL=!REPO_URL:.git=!
if "!REPO_URL:~0,4!"=="git@" (
    set REPO_URL=!REPO_URL:git@github.com:=https://github.com/!
)
if "!REPO_URL:~0,8!"=="https://" (
    set BASE_URL=!REPO_URL!/commit/
    set PR_BASE_URL=!REPO_URL!/pull/
) else (
    set BASE_URL=https://github.com/!REPO_URL!/commit/
    set PR_BASE_URL=https://github.com/!REPO_URL!/pull/
)

rem Set Jira base URL - change this to your actual Jira URL
set JIRA_URL=https://your-company.atlassian.net/browse/

rem Calculate date for 8 days ago
for /f "tokens=*" %%a in ('powershell -Command "[DateTime]::Now.AddDays(-8).ToString('yyyy-MM-dd')"') do set EIGHT_DAYS_AGO=%%a

set DATE_STAMP=%date:~-4,4%%date:~-7,2%%date:~-10,2%
set HTML_FILE=activity_report_%DATE_STAMP%.html

rem Create HTML header
echo ^<!DOCTYPE html^> > %HTML_FILE%
echo ^<html^>^<head^>^<title^>Activity Report - Last 8 Days^</title^> >> %HTML_FILE%
echo ^<style^> >> %HTML_FILE%
echo body{font-family:Segoe UI;margin:0;padding:20px} >> %HTML_FILE%
echo .header{background:#0078d4;color:white;padding:15px;border-radius:5px 5px 0 0} >> %HTML_FILE%
echo .content{padding:15px;border:1px solid #ddd;border-top:none;border-radius:0 0 5px 5px} >> %HTML_FILE%
echo h2{color:#0078d4;border-bottom:1px solid #0078d4;padding-top:10px} >> %HTML_FILE%
echo .commit{margin-bottom:15px;padding:10px;background:#f9f9f9;border-left:4px solid #0078d4} >> %HTML_FILE%
echo .pr{margin-bottom:15px;padding:10px;background:#f0f7ff;border-left:4px solid #6cc644} >> %HTML_FILE%
echo a{color:#0078d4;text-decoration:none} >> %HTML_FILE%
echo a:hover{text-decoration:underline} >> %HTML_FILE%
echo .commit-info{margin-bottom:6px;color:#555} >> %HTML_FILE%
echo .summary{margin-top:20px;padding:10px;background:#f0f7ff;border-radius:5px} >> %HTML_FILE%
echo .jira-link{display:inline-block;margin-right:8px;background:#f4f5f7;border-radius:3px;padding:2px 5px;border:1px solid #dfe1e6;font-size:12px} >> %HTML_FILE%
echo .jira-link a{color:#0052cc} >> %HTML_FILE%
echo ^</style^>^</head^> >> %HTML_FILE%
echo ^<body^>^<div class="header"^>^<h1^>Git Activity Report by %USER_NAME%^</h1^>^</div^> >> %HTML_FILE%
echo ^<div class="content"^> >> %HTML_FILE%
echo ^<p^>Report generated on %date% showing unique commits and PRs from the last 8 days^</p^> >> %HTML_FILE%

rem Create the Commits section
echo ^<h2^>Recent Commits^</h2^> >> %HTML_FILE%

rem Get all unique commits from the last 8 days across all branches
git log --all --author="%USER_EMAIL%" --since="%EIGHT_DAYS_AGO%" --pretty=format:"%%h|%%s|%%ad|%%an" --date=short > all_commits.txt

rem Count unique commits
set TOTAL_COMMITS=0

rem Sort the commits by date
sort /r all_commits.txt > sorted_commits.txt

rem Add commits
for /f "tokens=1-4 delims=|" %%d in (sorted_commits.txt) do (
    set /a TOTAL_COMMITS+=1
    set COMMIT_MSG=%%e
    
    echo ^<div class="commit"^> >> %HTML_FILE%
    echo ^<div class="commit-info"^>^<a href="%BASE_URL%%%d" target="_blank"^>%%d^</a^> - %%f by %%g^</div^> >> %HTML_FILE%
    echo ^<div class="commit-message"^>^<strong^>%%e^</strong^>^</div^> >> %HTML_FILE%
    
    rem Check for Jira ticket references in commit message
    set "JIRA_REFS="
    
    rem Use temporary file to store the PowerShell output
    powershell -Command "$message = '%%e'; [regex]::Matches($message, '[A-Z]+-\d+') | ForEach-Object { $_.Value } | Get-Unique" > jira_tickets_temp.txt
    
    rem Process each Jira ticket reference
    set "HAS_JIRA=0"
    for /f "tokens=*" %%j in (jira_tickets_temp.txt) do (
        set "HAS_JIRA=1"
        set "JIRA_REFS=!JIRA_REFS!^<span class='jira-link'^>^<a href='%JIRA_URL%%%j' target='_blank'^>%%j^</a^>^</span^> "
    )
    
    rem Add Jira links section if references were found
    if "!HAS_JIRA!"=="1" (
        echo ^<div class="jira-references"^>Jira: !JIRA_REFS!^</div^> >> %HTML_FILE%
    )
    
    echo ^</div^> >> %HTML_FILE%
)

rem Create Pull Requests section
echo ^<h2^>Recent Pull Requests^</h2^> >> %HTML_FILE%

rem Use git to get merged PRs (requires GitHub CLI if you want full details)
if exist "C:\Program Files\GitHub CLI\gh.exe" (
    rem If GitHub CLI is installed, get PRs with more details
    "C:\Program Files\GitHub CLI\gh.exe" pr list --state merged --limit 30 --json number,title,mergedAt,author --jq ".[] | select(.mergedAt > \"%EIGHT_DAYS_AGO%\") | \"PR #\(.number)|\(.title)|\(.mergedAt | sub(\"T.*$\"; \"\"))|\(.author.login)\"" > prs_temp.txt
) else (
    rem Fallback to listing recent merged PRs from git
    echo ^<p^>To show complete PR information, install GitHub CLI (gh)^</p^> >> %HTML_FILE%
    git log --merges --since="%EIGHT_DAYS_AGO%" --grep="Merge pull request" --pretty=format:"PR|%%s|%%ad|%%an" --date=short > prs_temp.txt
)

rem Check if there are PRs
set /p PR_FIRST_LINE=<prs_temp.txt
if not "!PR_FIRST_LINE!"=="" (
    set TOTAL_PRS=0
    
    rem Sort PRs by date
    sort /r prs_temp.txt > sorted_prs.txt
    
    rem Process PRs - format depends on whether we're using GitHub CLI or git log
    for /f "tokens=1-4 delims=|" %%p in (sorted_prs.txt) do (
        set /a TOTAL_PRS+=1
        
        rem Extract PR number and create link differently depending on source
        if "%%p"=="PR" (
            rem From git log - parse PR number from merge commit message
            set PR_NUM=%%q
            set PR_NUM=!PR_NUM:#=!
            set PR_NUM=!PR_NUM:~0,5!
            set PR_DATE=%%r
            set PR_AUTHOR=%%s
            set PR_TITLE=%%q
        ) else (
            rem From GitHub CLI - already formatted
            set PR_NUM=%%p
            set PR_NUM=!PR_NUM:PR #=!
            set PR_TITLE=%%q
            set PR_DATE=%%r
            set PR_AUTHOR=%%s
        )
        
        echo ^<div class="pr"^> >> %HTML_FILE%
        echo ^<div class="commit-info"^>^<a href="%PR_BASE_URL%!PR_NUM!" target="_blank"^>PR #!PR_NUM!^</a^> - !PR_DATE! by !PR_AUTHOR!^</div^> >> %HTML_FILE%
        echo ^<div class="commit-message"^>^<strong^>!PR_TITLE!^</strong^>^</div^> >> %HTML_FILE%
        
        rem Check for Jira ticket references in PR title
        set "JIRA_REFS="
        
        rem Use temporary file to store the PowerShell output
        powershell -Command "$message = '!PR_TITLE!'; [regex]::Matches($message, '[A-Z]+-\d+') | ForEach-Object { $_.Value } | Get-Unique" > jira_tickets_temp.txt
        
        rem Process each Jira ticket reference
        set "HAS_JIRA=0"
        for /f "tokens=*" %%j in (jira_tickets_temp.txt) do (
            set "HAS_JIRA=1"
            set "JIRA_REFS=!JIRA_REFS!^<span class='jira-link'^>^<a href='%JIRA_URL%%%j' target='_blank'^>%%j^</a^>^</span^> "
        )
        
        rem Add Jira links section if references were found
        if "!HAS_JIRA!"=="1" (
            echo ^<div class="jira-references"^>Jira: !JIRA_REFS!^</div^> >> %HTML_FILE%
        )
        
        echo ^</div^> >> %HTML_FILE%
    )
    
    rem Add PR summary
    echo ^<div class="summary"^> >> %HTML_FILE%
    echo ^<p^>^<strong^>Total Pull Requests:^</strong^> !TOTAL_PRS!^</p^> >> %HTML_FILE%
    echo ^</div^> >> %HTML_FILE%
) else (
    echo ^<p^>No pull requests merged in the last 8 days.^</p^> >> %HTML_FILE%
)

rem Add commit summary
echo ^<div class="summary"^> >> %HTML_FILE%
echo ^<p^>^<strong^>Total Unique Commits:^</strong^> %TOTAL_COMMITS% in the last 8 days^</p^> >> %HTML_FILE%
echo ^</div^> >> %HTML_FILE%

rem Close HTML
echo ^</div^>^</body^>^</html^> >> %HTML_FILE%

rem Clean up
del all_commits.txt 2>nul
del sorted_commits.txt 2>nul
del prs_temp.txt 2>nul
del sorted_prs.txt 2>nul
del jira_tickets_temp.txt 2>nul

echo Report generated: %HTML_FILE%
echo.
echo Note: Please update the JIRA_URL variable with your actual Jira instance URL
echo      Current setting: %JIRA_URL%
